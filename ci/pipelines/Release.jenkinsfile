def channel = "testing"
def version = "0.0.0"
def profile = "vs2022.conanprofile"
def archs = ['x86', 'x86_64']
def configs = ['Debug', 'Release']

library identifier: "cpp-jenkins-pipelines@master", retriever: modernSCM(
  [$class: "GitSCMSource",
   remote: "https://github.com/systelab/cpp-jenkins-pipelines.git"])
   
pipeline
{
	agent
	{
		label 'lib-build'
	}

	parameters
	{
		string(	name: 'version',
				description: 'Number of the version to build (must match the name of the tag that will be checked out)',
				defaultValue: '0.0.0' )

		booleanParam( name: 'stable',
					  description: 'Show if generated library should be uploaded as stable or testing',
					  defaultValue: false )
	}

	options
	{
		skipDefaultCheckout(true)
		disableConcurrentBuilds()
		buildDiscarder(logRotator(numToKeepStr: '5'))
	}

	stages
	{
		stage('Checkout')
		{
			steps
			{
				script 
				{
					version = params.version
					channel = params.stable ? "stable" : "testing"
				}
				deleteDir()
				configureConanRemotes()
				checkoutSourceCodeFromTag(version)
			}
		}
		
		stage('Build')
		{	
			steps
			{
				script
				{
					archs.each
						{ arch ->
							configs.each
							{ config ->
								stage("Build ${config}|${arch}")
								{
									def buildFolder = "build/${config}-${arch}"
									bat "conan install . --install-folder ${buildFolder} --profile=${profile} -s arch=${arch} -s build_type=${config}"
									bat "conan build . --build-folder ${buildFolder}" 
									bat "conan export-pkg . RESTAPICore/${version}@systelab/${channel} --build-folder ${buildFolder} --force"
									bat "conan test ./test_package/conanfile.py RESTAPICore/${version}@systelab/${channel} --profile=${profile} -s arch=${arch} -s build_type=${config}"
									bat "conan export-pkg ./test/RESTAPICoreTestUtilities/conanfile.py RESTAPICoreTestUtilities/${version}@systelab/${channel} --build-folder ${buildFolder} --force"
									bat "conan test ./test/RESTAPICoreTestUtilities/test_package/conanfile.py RESTAPICoreTestUtilities/${version}@systelab/${channel} --profile=${profile} -s arch=${arch} -s build_type=${config}"
									dir("${buildFolder}/bin/${config}")
									{
										bat "RESTAPICoreTest.exe --gtest_output=xml:RESTAPICoreTest.xml"
									}
							}
						}
					}
				}
			}
		}

		stage('Deploy')
		{
			steps
			{
				script
				{
					sh "conan upload RESTAPICore/${version}@systelab/${channel} --all -r systelab-conan-local --force"
					sh "conan upload RESTAPICoreTestUtilities/${version}@systelab/${channel} --all -r systelab-conan-local --force"
				}
			}
		}	
	}
	
	post
	{
		always
		{
			junit allowEmptyResults: true, testResults: "build/**/RESTAPICoreTest.xml"
			script
			{
				currentBuild.description = "${version}/${channel}"
			}
		}
	}
}